/----------------------------------------------
/----------------------------------------------

 * Example: const anahtar sözcüðü ile parametre tanýmlama
   - amaç : x ve y deðiþkenlerini sadece okumak, deðiþim  yapýlmayacak
   - bu durumda const anahtar sözcüðü kullanýlýr. --> const T*
   - büyük türler için const anahtar sözcüðünün kullanýlmasý önemlidir. 


#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

typedef struct {
	int a[10][20];
	int row, col;
}Matrix;

void add_matrix_ptr(const Matrix* ptr1, const Matrix* ptr2, Matrix* result) {
	// amaç : x ve y deðiþkenlerini sadece okumak, deðiþim  yapýlmayacak
	// bu durumda const anahtar sözcüðü kullanýlýr. --> const T*
	// büyük türler için const anahtar sözcüðünün kullanýlmasý önemlidir. 
}

int main() {

	Matrix x, y, result;
	add_matrix_ptr(&x, &y, &result);
	printf("sizeof(result) = %zu\n", sizeof(result));
}

/----------------------------------------------
/----------------------------------------------

 * Example: Parametrelerin pointer seçilmesinin nedenleri ? 
   - output parameter : just write the value  --> T*
   - input parameter  : just read the value   --> const T*
   - in-out parameter : both read and write the parameter 
   - iki veya daha fazla return value varsa
     - void get_values(int x, int y, int* p1, double* p2, double* p3);
     - neden const int x, const int y deðil???
	 - const olmasýnda sakýnca yoktur. Ancak call by value olduðundan, parametre pointer olmadýðý sürece anlamý olmayacaktýr. Bu sebeple const genellikle belirtilmez. 
	- arrays --> call by value ile fonksiyonlara argüman olarak gönderilemez. 


#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void get_values(int x, int y, int* p1, double* p2, double* p3);

int main() {

	int ival;
	double dval1, dval2;
	get_values(10, 34, &ival, &dval1, &dval2);

}

/----------------------------------------------
/----------------------------------------------

 * Example: arrays with functions using pointer parameters 

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void get_values(int* ptr);
void get_values(int array[0]); // syntax error
void get_values(int &array[0]);// syntax error

int main() {

	int a[100] = { 0 };
	get_values(a);
}

/----------------------------------------------
/----------------------------------------------

 * Example: arrays with functions using pointer parameters 

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

void print_array(const int* ptr, int size);

int main() {

	int a[100] = { 0 };
	print_array(a, sizeof(a)/sizeof(a[0]));
}

/----------------------------------------------
/----------------------------------------------

 * const anahtar sözcüðü:
   - deðeri deðiþmeyecek bir deðiþkendir. --> const int y = 10;
   - immutable / mutable kavramlarý ile iliþkilidir. 
   - mutable   --> deðeri deðiþtirilebilir. 
   - immutable --> deðeri deðiþtirilemez !!!
   - logic olarak deðiþtirilmemesi gereken verilerin korunmasýnda kullanýlýr (primes, etc.) const kullanýmý ile compiler syntax hatasý dönecektir!!

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {

	int x = 20;       // non const variable 
	const int y = 10; // const variable (oxymoron)
}

/----------------------------------------------
/----------------------------------------------

 * Example: 
 
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {

	int x = 20;    // non const variable 
	++x;          // not syntax error

	const int y = 10; // const variable (oxymoron)
	++y;              // syntax error
}

/----------------------------------------------
/----------------------------------------------

 * Example: 

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {

	int a[] = { 1,2,3,4,5,6,7,8 }; // mutable
	const int b[] = { 0 };         // immutable
}

/----------------------------------------------
/----------------------------------------------

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

#define MAX 100 // instead of const int max = 100;???

int main() {

	int a[] = { 1,2,3,4,5,6,7,8 }; // mutable
	const int b[] = { 0 };         // immutable
	const int max = 100;
	const int primes[100] = { 0 }; // macros can not take more than one values

	int number1 = MAX; // int number = 100; 
	int number2 = max; // max is a variable 

}

/----------------------------------------------
/----------------------------------------------

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {

	const int primes[100] = { 0 }; 
	int n = 10;
	++primes[n];  // primes dizinin deðiþtirilmesi engellendi.

}

